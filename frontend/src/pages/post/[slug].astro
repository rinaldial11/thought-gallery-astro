---
import '../../styles/global.css';
import { axiosInstance } from '@/lib/axios-instance';

interface IAuthor {
  first_name: string;
  last_name: string;
  email: string;
}

interface IPost {
  id?: string;
  status: "published" | "draft";
  author: IAuthor;
  created_at?: string; 
  updated_at?: string | null;
  title: string;
  body: string;
  slug?: string;
  seo_title: string;
  seo_desc: string;
  version?: number;
}

export async function getStaticPaths() {
  try {
    console.log('Fetching posts for static paths...');
    const res = await axiosInstance.get(
      "/items/posts?fields=*,author.first_name,author.last_name,author.email",
      {
        params: {
          filter: {
            status: {
              _eq: "published",
            },
          },
        },
      }
    );
    
    const posts = res.data?.data || [];
    console.log(`Found ${posts.length} posts`);

    return posts.map((post: IPost) => ({
      params: { slug: post.slug },
    }));
  } catch (error) {
    console.error('Error fetching static paths:', error);
    return [];
  }
}

const { slug } = Astro.params;

let post: IPost | null = null;
let error = null;

try {
  console.log('Fetching post data for slug:', slug);
  const res = await axiosInstance.get(
    "/items/posts?fields=*,author.first_name,author.last_name,author.email",
    {
      params: {
        filter: {
          slug: {
            _eq: slug,
          },
          status: {
            _eq: "published", 
          },
        },
        limit: 1,
      },
    }
  );

  post = res.data?.data?.[0] as IPost;
  console.log('Post fetched:', post ? 'Success' : 'Not found');
  
  if (!post) {
    return Astro.redirect('/404');
  }
  
} catch (err) {
  console.error('Error fetching post:', err);
  error = err;
}

function formatDate(dateString?: string): string {
  if (!dateString) return '';
  const date = new Date(dateString);
  return date.toLocaleDateString('id-ID', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<!DOCTYPE html>
<html lang="id">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{post?.seo_title || post?.title || 'Post Not Found'}</title>
    <meta name="description" content={post?.seo_desc || ""} />
    <meta name="author" content={`${post?.author?.first_name} ${post?.author?.last_name}`} />
    {post?.created_at && <meta name="article:published_time" content={post.created_at} />}
    {post?.updated_at && <meta name="article:modified_time" content={post.updated_at} />}
    <meta property="og:type" content="article" />
    <meta property="og:title" content={post?.seo_title || post?.title} />
    <meta property="og:description" content={post?.seo_desc} />
  </head>
  <body class="bg-gray-50 min-h-screen">
    <div class="max-w-4xl mx-auto px-4 py-8 sm:px-6 lg:px-8">
      <button onclick="window.history.back()" class="inline-flex items-center gap-2 text-gray-600 hover:text-gray-700 text-sm font-medium mb-8 transition-colors">
        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
          <path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"/>
        </svg>
        Kembali ke Blog
      </button>
      {error ? (
        <div class="bg-red-50 border border-red-200 rounded-lg p-8 text-center">
          <div class="mx-auto w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mb-4">
            <svg class="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
          </div>
          <h1 class="text-xl font-bold text-red-900 mb-2">Error Memuat Artikel</h1>
          <p class="text-red-700">Terjadi kesalahan saat memuat artikel ini. Silakan coba lagi nanti.</p>
        </div>
      ) : post ? (
        <article class="bg-white rounded-xl shadow-sm overflow-hidden">
          <header class="px-8 py-10 border-b border-gray-200">
            <h1 class="text-4xl md:text-5xl font-bold text-gray-700 mb-4 leading-tight">
              {post.title}
            </h1>
            <div class="flex flex-col sm:flex-row sm:items-center gap-4 sm:gap-6 text-sm text-gray-600">
              <div class="flex items-center gap-3">
                <div class="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-semibold text-sm">
                  {post.author.first_name.charAt(0).toUpperCase()}{post.author.last_name.charAt(0).toUpperCase()}
                </div>
                <div>
                  <p class="font-semibold text-gray-700">{post.author.first_name} {post.author.last_name}</p>
                  <p class="text-gray-500 text-xs">{post.author.email}</p>
                </div>
              </div>
              <div class="hidden sm:block w-px h-6 bg-gray-300"></div>
              <div class="flex items-center gap-2">
                <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                <time datetime={post.created_at} class="text-gray-600">
                  {formatDate(post.created_at)}
                </time>
              </div>
              <div class="hidden sm:block w-px h-6 bg-gray-300"></div>
              {post.status === 'published' && (
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                  Published
                </span>
              )}
            </div>
          </header>
          <div class="px-8 py-10">
            <div class="prose-custom max-w-none text-lg leading-relaxed" set:html={post.body} />
          </div>
          <footer class="px-8 py-6 bg-gray-50 border-t border-gray-200">
            <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
              <div class="text-sm text-gray-500">
                {post.updated_at && post.updated_at !== post.created_at && (
                  <p>Terakhir diupdate: {formatDate(post.updated_at)}</p>
                )}
                {post.version && (
                  <p>Versi: {post.version}</p>
                )}
              </div>
            </div>
          </footer>
        </article>
      ) : (
        <!-- Not Found State -->
        <div class="text-center py-16">
          <div class="mx-auto w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mb-6">
            <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
            </svg>
          </div>
          <h1 class="text-2xl font-bold text-gray-700 mb-2">Artikel Tidak Ditemukan</h1>
          <p class="text-gray-600 mb-8">Artikel yang Anda cari tidak dapat ditemukan atau telah dihapus.</p>
          <button onclick="window.history.back()" class="inline-flex items-center gap-2 px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
              <path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"/>
            </svg>
            Kembali ke Blog
          </button>
        </div>
      )}
    </div>
  </body>
</html>